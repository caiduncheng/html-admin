module.exports = {
  error404: {
    sorry: 'Sorry, the page you visited is ',
    missing: 'missing',
    la: ' ...',
    back: 'Back',
    home: 'Home',
    noPermission: "Sorry, no permission to access the document!"
  },
  error503: {
    sorry: 'Sorry, the attachment you visited is ',
    missing: 'missing',
    la: ' ...',
    close: 'Close the page'
  },
  bar: {
    xCurTab: 'Close',
    xOthTab: 'Close others',
    xAllTab: 'Close all',
    rCurTab: 'Refresh',
    //
    changePsw: 'Change Password',
    username: 'Username',
    oriPsw: 'Old Password',
    newPsw: 'New Password',
    conPsw: 'Confirm Password',
    cancel: 'Cancel',
    confirm: 'Confirm',
    inconsistentPsw: 'Confirm password is inconsistent with new password.',
    oriPswNull: 'Old password cannot be empty.',
    newPswNull: 'New password cannot be empty.',
    conPswNull: 'Confirm password cannot be empty.',
    operateSucc: 'Operation successful',
    //
    exit: 'Exit',
    conExit: 'Are you sure you want to exit?',
    prompt: 'Warning',
    //
    home: 'Home',
    fToFind: 'Failed to load pages!',
    loading: 'Loading...',
    personal: 'Profile',
    logout: 'Log Out',
    newpassword_tip: 'Password must be between 8 and 18 characters'
  },
  common: {
    set: 'Set',
    cancel: 'Cancel',
    confirm: 'Confirm ',
    support: 'Support',
    yes: 'Yes',
    no: 'No',
    close: 'Close',
    submit: 'Submit',
    add: 'Add',
    query: 'Search',
    detail: 'Detail',
    modify: 'Modify',
    delete: 'Delete',
    operate: 'Operation',
    operate_success: 'Operation successful',
    success: 'Success',
    isRequired: '{msg} is required.',
    prompt: 'Warning',
    batchDel: 'Batch Delete',
    remark: 'Remark',
    startDate: 'Start Date',
    endDate: 'End Date',
    createTime: 'Create Time',
    updateTime: 'Update Time',
    import: 'Import',
    export: 'Export',
    exitMsg: ' Press esc to exit the full screen.',
    noData: 'No Data',
    back: 'Back',
    giveUp: 'Give Up',
    save: 'Save',
    updater: 'Revisor',
    reset: 'Reset',
    language: 'Language',
    tip: 'Tip',
    tip_select: 'Please select',
    nullInputTip: 'This input cannot be null.',
    stop: 'break off',
    publish: 'release',
    msg_deleteTips: 'Delete {name} [{value}]?',
    update_success: 'update successful',
    priorityLevel: [
      {value: 1, label: 'Normal', type: 'success', style: 'low', color: '#67c23a'},
      {value: 2, label: 'Major', type: 'warning', style: 'normal', color: '#e6a23c'},
      {value: 3, label: 'Critical', type: 'danger', style: 'high', color: '#f56c6c'}
    ],
    downloadBtn: 'Download',
    deleteBtn: 'Delete',
    updateBtn: 'Modify',
    emailError: 'Email address is illegal.',
    email: 'E-mail',
    platform: {
      admin: 'Admin Platform',
      operator: 'Operator Platform',
      dev: 'Developer Platform',
      merchant: 'Merchant Platform',
      geo: 'Geofencing'
    },
    time: {
      seconds: 'seconds',
      minutes: 'minutes',
      hours: 'hours',
      days: 'days'
    },
    empty_tip: 'No Data',
    email_format_error: 'Incorrect email format',
    online: 'Online',
    offline: 'Offline',
  },
  menuList: {
    104000: 'Developer',
    104002: 'App Store',
    104004: 'System app',
    104006: 'Device',
    104080: 'Permission',
    104082: 'Operator',
    104086: 'Merchant',
    10400000: 'Developer List',
    10400002: 'Account List',
    10400004: 'App List',
    10400200: 'App List',
    10400202: 'App Examine',
    10400204: 'Order List',
    10408000: 'Account',
    10408004: 'Role',
    10408290: 'Dashboard',
    10408200: 'Operator List',
    10408202: 'Operator Examine',
    10408204: 'Contact Us',
    10408600: 'Merchant List',
    10400400: 'Essential Apps',
    10400402: 'Optional Apps',
    104008: 'Group',
    104010: 'White List',
    10400600: 'Device List',
    104012: 'Manufacturer',
    104014: 'Developer App',
    10401400: 'List',
    10401402: 'Initial Examine',
    10401404: 'Test',
    10401406: 'Signature',
    104016: 'Data Center',
    10401600: 'Operator Report',
    10401602: 'Application Report',
    10401604: 'Command Report',
    10401606: 'Terminal Report',
  },
  language_list: {
    zh: 'Chinese',
    en: 'English',
    ko: 'Korean',
    jp: 'Japanese',
    pt: 'Portuguese',
    ru: 'Russian',
    fr: 'French',
    de: 'German',
    es: 'Spanish',
    it: 'Italian',
    ar: 'Arabic',
    other: 'other'
  },
  login: {
    aLogin: 'Login',
    account: 'Account / Email',
    password: 'Password',
    verifyCode: 'Verification Code',
    login: 'Login',
    emailEmpty: 'email address cannot be empty.',
    accountEmpty: 'Account number cannot be empty.',
    passwordEmpty: 'Password cannot be empty.',
    verifyEmpty: 'Verification code cannot be empty.',
    forgetPsw: 'Forget Password?',
  },
  operator: {
    name: 'Operator Name',
    cn: 'Certificate CN',
    orgName: 'Organization',
    linkman: 'Contact',
    country: 'Country',
    username: 'Username',
    password: 'Password',
    city: 'City',
    creTime: 'Create Time',
    status: 'Status',
    locked: 'Locked',
    normal: 'Normal',
    pendingReview: 'Pending review',
    reject: 'Reject',
    createOperator: 'Normal Account',
    createDemoOperator: 'Trial Account',
    level_expired_mail: 'Account Expiration Reminder',
    statusOption: [
      {label: 'Locked', value: 0},
      {label: 'Normal', value: 1},
      {label: 'Pending review', value: 2},
      {label: 'Reject', value: 3},
    ],
    deviceCount: 'Device Count',
    operatorId: 'Operator ID',
    operatorNo: 'Operator No.',
    oid: 'oid',
    shortName: 'Short Name',
    address: 'Address',
    provName: 'Province',
    cityName: 'City',
    areaName: 'Area',
    mobile: 'Tel',
    email: 'E-Mail',
    license: 'License',
    level: 'Level',
    levelExpirationTime: 'Level Expiration Date',
    channel: 'FlyDesk',
    license_type: 'License type',
    channel_type: 'Channel type',
    remainingTime: 'FlyDesk resources',
    remainingChnl: 'channels',
    checkBtn: 'Examine',
    resetMapBtn: 'Reset Map',
    resetPassBtn: 'Reset Password',
    addResourceBtn: "Resource",
    permissionsBtn: "Permissions",
    deleteConfirm: "Delete this operator?",
    certId: "Certificate ID",
    certStatus: "Certificate Status",
    verify: "Examine",
    process: "Approved / Rejected",
    checkComplete: "Complete",
    downloadCertBtn: "Download certificate",
    checkSuccess: "Approved",
    checkFailed: "Rejected",
    checkFailedReasonTip: "Please enter a reason for rejection.",
    checkSuccessTip: 'remark',
    chooseFileBtn: "Choose one approved certificate.",
    uploadFile: "Upload",
    quantity: "Quantity",
    effectDate: "Effective date",
    selectEffectTip: "Select effective date.",
    remark: "Remark",
    addLicenseConfirm: "Add resource?",
    licenseEmptyCheck: "Please choose resource type.",
    quantityCheck: "The number of added resources must be greater than zero.",
    effectTimeCheck: "Please input effective time.",
    lever: 'Level',
    changeLever: 'Change level',
    changeLeverTip: 'Change level?',
    leverExpireTimeTip: 'Expiration date (If this parameter is not set, it takes effect permanently.)',
    leverExpireForever: 'Forever',
    expireTimeTip: 'Choose expiration date.',
    expireDate: 'Expiration date',
    resetDefaultConfirm: 'Reset the password to default?',
    resetConfirm: 'Confirm to reset the password and send a random password to the email ?',
    TIME: '10,000 minutes per year',
    CHNL: 'Annual channel',
    BTLic: 'Basic version for 12 months',
    ITLic: 'Advanced version for 12 months',
    ATLic: 'Premium version 12 months',
    res_remain: 'Remaining resources',
    res_unit_time: 'Duration (minutes)',
    res_unit_chnnel: 'Channel',
    googleMap: 'GOOGLE MAP',
    mapBox: 'Mapbox',
    blacklist: 'Blacklist',
    functionalConfiguration: "Functional Configuration",
    config: {
      sysAppAutoUpdate: 'System apps are automatically updated.',
      appSign: 'Verify application signature',
      geoTrace: 'geofence track(Used to record terminal traces)',
      extractLogs: 'Extract logs',
      remoteCommand: 'Remote command'
    },
    mapType: 'Map Type',
    mapKey: 'Key',
    contactName: 'Contact Name',
    defaulTag: 'Newland NPT',
    level_list: [
      {label: 'Standard', value: 'FREE_LEVEL'},
      {label: 'Enterprise', value: 'CHARGE_L2'}
    ],
    tipDeleteEmail: 'Confirm to delete the E-mail [{email}]?',
  },
  appstore: {
    application: {
      chargeStrategyOption: [
        {label: 'Free', value: 1},
        {label: 'Pay In Full', value: 2},
        {label: 'Subscribe', value: 3},
      ],
      allCategory: 'All',
      noMore: 'No More',
      loading: 'Loading',
      chargeStrategyFree: 'Free',
      chargeStrategyBuy: 'Pay In Full',
      chargeStrategySubscribe: 'Subscribe',
      subscribeType: 'Subscribe Type',
      subscribeTypeByYear: 'Yearly',
      subscribeTypeByMonth: 'Monthly',
      subscribeTypeByWeek: 'Weekly',
      statusNormal: 'Normal',
      statusOffShelf: 'Suspend',
      appName: 'App Name',
      appVersion: 'Version Name',
      creTime: 'Create Time',
      developerName: 'Developer',
      chargeStrategy: 'Charge Strategy',
      amount: 'Price',
      status: 'Status',
      devCount: 'Device Count',
      buyCount: 'Buyer Count',
      appId: 'App ID',
      lastestVersionId: 'The Lastest Version ID',
      lastestVersionName: 'The Lastest Version',
      packageName: 'Package',
      appIntroduction: 'App Introduction',
      appCategoryId: 'App Category ID',
      categoryName: 'Category',
      releaseType: 'Release Type',
      releaseTarget: 'Release Target',
      releaseTarget1: 'All',
      releaseTarget2: 'Designated Open',
      releaseTarget3: 'Local',
      characterCode: 'Developer Character',
      keyId: 'Key ID',
      downloadCount: 'Number Of Downloads',
      supportDevice: 'Support Device',
      autoFit: 'Auto Fit',
      portrait: 'Portrait',
      landscape: 'Landscape',
      bankcardApp: 'Bank App',
      highQuality: 'Boutique App',
      updTime: 'Update Time',
      mainLanguage: 'Main Language',
      supportLanguage: 'Support Language',
      scoreAverage: 'Average Score',
      appraiseCount: 'Number Of Appraises',
      trialDays: "Trial Days",
      releaseType1: 'Auto Release',
      releaseType2: 'Mannual Release',
      releaseType3: 'Phase Release',
      appVersionList: 'Version List',
      appVersionId: 'App Version ID',
      submitTime: 'Submit Time',
      releaseTime: 'Release Time',
      versionStatus9: 'Pending Signature',
      versionStatus8: 'Testing',
      versionStatus7: 'First Examine',
      versionStatus6: 'Refuse',
      versionStatus5: 'To Be Released',
      versionStatus4: 'Releasing',
      versionStatus2: 'Take Down',
      versionStatus1: 'Released',
      versionStatus0: 'Cancel/End',
      screenshots: 'Screenshots',
      appRevisionList: 'Revision Records',
      appSize: 'App Size',
      fileName: 'Filename',
      uploadUserId: 'Uploader ID',
      uploader: 'Uploader',
      appIconUrl: 'App Icon',
      releasePhase: 'Release Phase',
      examineTime: 'Examine Time',
      examineUserId: `Examiner's ID`,
      examiner: `Examiner`,
      revision: 'Revision',
      appDownloadList: 'Download List',
      devSn: 'Device SN',
      downloadCharacterCode: `Downloader's Character Code`,
      downloadkeyId: `Downloader's Key ID`,
      appVersionCode: 'Version Code',
      downloadTime: 'Start Download Time',
      installTime: 'Installation Completion Time',
      downloadReason: 'Download Reason',
      downloadReason1: 'Initial Installation',
      downloadReason2: 'New Version Update',
      oldAppVersion: 'Previous Version',
      downloadStatus: 'Status',
      downloadStatus1: 'Downloading',
      downloadStatus2: 'Download Complete',
      downloadStatus3: 'Installation Complete',
      oldAppVersionCode: 'Previous Version Code',
      appPurchaseList: 'Purchase Records',
      purchaseNo: 'Purchase No',
      mrchId: 'Merchant Id',
      mrchName: 'Merchant',
      nextDeductTime: 'Next Deduction Time',
      purchaseDescription: 'Description',
      purchaseStatus1: 'Normal',
      purchaseStatus2: 'Arrears',
      purchaseStatus0: 'Invalid',
      appApprasiseList: 'Apprasise List',
      appAgreement: 'Agreement',
      horizontalScreenshot: 'Horizontal Screenshots',
      verticalScreenshot: 'Vertical Screenshots'
    },
    examine: {
      creTime: 'Create Time',
      submitTime: 'Submit Time',
      appInfo: 'App Information',
      historicVersion: 'Historic Versions',
      next: 'Next',
      pass: 'Pass',
      reject: 'Reject',
      examineInfo: 'Examine Info',
      hasPassed: 'Has Passed',
      hasRejected: 'Has Rejected',
      noVersion: `It's a new app, no historical version`,
      noScreenshot: `No Screenshot`,
      msgConfirmPassApp: 'Do you want to pass this app?',
      msgConfirmPass: 'Do you want to pass this step?',
      msgConfirmPassModel: 'Do you want to pass this app for ',
      msgConfirmRejectApp: 'Do you want to reject this app?',
      msgInputRejectReason: 'Please input the reject reason.',
      appInformationExamine: 'App Information Examine',
      staticResourcesExamine: 'Static Resources Examine',
      appSecurityExamine: 'App Security Examine',
      manualExamine: 'Manual Examine',
      stringSensitiveWordsExamine: 'String Sensitive Words Examine',
      examineResult: 'Examine Result',
      strings: 'All Strings',
      picturesExamine: 'Pictures Examine',
      modelCode: 'Model',
      packageName: 'Package',

      status0: 'Waiting for test',
      status1: 'Pass',
      status2: 'Rejected',
      status3: 'Testing',
      statusOption: [
        {label: 'Waiting for test', value: 9},
        {label: 'Pass', value: 8},
        {label: 'Rejected', value: 6},
        {label: 'Testing', value: 3},
      ],
      testTime: 'Test Time',
      comfirm_pass: 'Are you sure to pass the audit of this application?',
      comfirm_reject: 'Are you sure to reject the audit of this application?',
      modelList: 'Model List',
      image_added_successfully: 'Image added successfully!',
      screenshots_lenght_limit_tip:
        'The number of screenshots of a single type cannot exceed 9.',
      screenshots_tip: 'PNG or JPG format. Image files should be less than 500KB',
      select_support_portrait_device:
        'Please select support portrait device first',
      select_support_landscape_device:
        'Please select support landscape device first',
      support_device_type: 'Please select support device type.',
      tested_tip: 'Tested:',
      testing_tip: 'Not Tested:',
      passed_tip: 'Passed:',
      rejected_tip: 'Fail:',

    },
    order: {
      orderNo: 'Order No',
      orderTitle: 'Order Title',
      appName: 'App Name',
      orderType: 'Order Type',
      orderType1: 'Pay In Full',
      orderType2: 'Subscribe',
      orderType9: 'Refund',
      amount: 'Amount',
      creTime: 'Create Time',
      buyerCharacterName: 'Buyer',
      developerName: 'Developer',
      operatorName: 'Operator',
      status: 'Status',
      status0: 'Closed',
      status1: 'Succeed',
      status2: 'Failed',
      status3: 'Refund',
      status7: 'Cancel',
      status9: 'Pending Payment',
      oriOrderNo: 'Original Order No',
      characterCode: 'Character Code',
      keyId: 'Key ID',
      devSn: 'Device SN',
      userId: 'User ID',
      username: 'Username',
      describe: 'Describption',
      operatorId: 'Operator ID',
      orgId: 'Organization ID',
      agentId: 'Agent ID',
      settType: 'Settlement Type',
      settType1: 'Online Payment',
      settType2: 'Automatic Deduction By Binding BankCard',
      settType3: 'Offline Payment',
      settAccountId: 'Settlement Account ID',
      settTime: 'Settlement Time',
      bankCardNoMask: 'BankCard No Mask',
      voucherCode: 'Voucher Code',
      transId: 'Transaction ID',
      examineTime: 'Examine Time',
      examineCharacterCode: `Examiner's Character Code`,
      examineKeyId: `Examiner's Key ID`,
      examineUserId: `Examiner's User ID`,
      updTime: 'Update Time',
      goodsDesc: 'Goods Description',
      packageName: 'Package',
      chargeStrategy: 'Charge Strategy',
      appAmount: 'Amount',
      goodsList: 'Goods List'
    }
  },
  merchant: {
    condition: 'Condition',
    mrchId: 'Merchant Id',
    name: 'Name',
    binder: 'Binder',
    characterCode: `Character`,
    operator: `Operator`,
    organization: 'organization',
    countryName: 'Country',
    provName: 'Province',
    cityName: 'City',
    status: 'Status',
    locked: 'Locked',
    normal: 'Normal',
    lock: 'Lock',
    unlock: 'Unlock',
    transfer: 'Transfer',
    creTime: 'Create Time',
    StatisticsOnApp: 'Statistics on Apps',
    buyCount: 'Bought',
    subscribeCount: 'Subscribed',
    appCount: 'All',
    merchantDetail: 'Details',
    merchantDevice: 'Devices',
    merchantBuyApp: 'Bought Apps',
    merchantSubscribeApp: 'Subscribed Apps',
    merchantFreeApp: 'Free Apps',
    merchantTrialApp: 'Trial Apps',
    subscribeType: 'Subscribe Type',
    subscribeTypeByYear: 'Yearly',
    subscribeTypeByMonth: 'Monthly',
    subscribeTypeByWeek: 'Weekly',
    startTime: 'Start Time',
    expireTime: 'Expiration Date',
    devSn: 'Device SN',
    modelCode: 'Device Model Code',
    intoTime: 'Storage Time',
    activateTime: 'Activate Time',
    appName: 'App Name',
    appVersion: 'Version Name',
    developerName: 'Developer',
    caCn: 'Certificate CN',
    amount: 'Amount',
    shortName: 'Short Name',
    mrchNo: 'Merchant No',
    businessLicense: 'Business License',
    contactName: 'Contact Person',
    mobile: 'Mobile',
    email: 'E-mail',
    countryCode: 'Country Code',
    areaCode: 'Area Code',
    areaName: 'Area',
    address: 'Address',
    postCode: 'Postcode',
    updTime: 'Update Time',
    remark: 'Remark',
    msgConfirmLock: 'Do you want to lock this merchant?',
    msgConfirmUnlock: 'Do you want to unlock this merchant?',
    msgOperatorIsNull: 'Please select an operator',
    purchaseNo: 'Purchase No',
    endTime: 'End Time'
  },
  developer: {
    name: 'Developer Name',
    developerType: 'Developer Type',
    developerTypeOption: [
      {label: 'Personal', value: 1},
      {label: 'Company', value: 2},
    ],
    pidType: 'ID Type',
    pidNo: 'ID No',
    legalPerson: 'Legal Person',
    companyRegDate: 'Date Of Company Registration',
    contactName: 'Contact person',
    mobile: 'Mobile',
    email: 'E-mail',
    countryCode: 'Country',
    provName: 'Province',
    cityName: 'City',
    areaName: 'Area',
    address: 'Address',
    post_code: 'Post Code',
    remark: 'Remark',
    status: 'Status',
    statusOption: [
      {label: 'Locked', value: 0},
      {label: 'Normal', value: 1},
      {label: 'Pending Review', value: 2},
      {label: 'Reject', value: 3},
      {label: 'Logged Off', value: 4},
      {label: 'Examining', value: 5},
    ],
    creTime: 'Apply Time',
    updTime: 'Updated Time',
    balance: 'Balance',
    appCount: 'Number Of Apps',
    operate_detail: 'Detail',
    operate_apply_cert: 'Apply CSR',
    operate_download_cert: 'Download CSR',
    operate_lock: 'Locked',
    operate_unlock: 'Unlock',
    operate_delete: 'Delete',
    operate_examine: 'Examine',
    btn_developer_cert: 'Choose Developer Certificate',
    comfirm_lock: 'Confirm to lock this developer?',
    comfirm_unlock: 'Confirm to unlock this developer?',
    comfirm_delete: 'Confirm to delete this developer?',
    id_card: 'ID Card',
    passport: 'Passport',
    unknown: 'Unknown',
    reject: 'Reject',
    pass: 'Pass',
    next: 'Next',
    title_detail: 'Developer Details',
    title_examine: 'Developer Examine',
    cert_uuid: 'Developer Certificate UUID',
    error_tip: {
      reject_remark: 'Please enter a reason for rejection'
    },
    common_name: 'Common Name',
    country_name: 'Country Name',
    province_name: 'Province Name',
    locality_name: 'Locality Name',
    organization_name: 'Organization Name',
    organization_unit_name: 'Organization Unit Name',
    custom_name: 'Custom Name',
    custom_desc: 'Custom Description',
    rule_tip: {
      common_name: 'Please input common name',
      province_name: 'Please input province name',
      locality_name: 'Please input locality name',
      organization_name: 'Please input organization name',
      organization_unit_name: 'Please input organization unit name',
      custom_desc: 'Please input custom description'
    },
    cert_download_fail_tip: 'Download fail, please contact administrator!',
    developer_info: 'Developer Info',
    csr_info: 'CSR Info',
    sha_1: 'SHA-1',
    public_key: 'Public Key'
  },
  group: {
    title: 'Group',
    name: 'Group Name',
    addGroup: 'Add group',
    deleteGroup: 'Delete Group',
    application: 'Application',
    operatorList: 'Operator List',
    bindOperator: 'Bind Operator',
    operator: {
      name: 'Operator Name',
      bindTime: 'Binded Time',
      linkMan: 'Contact Person',
      email: 'E-mail',
      creTime: 'Creation Time'
    },
    tip_changeAppVersion: 'Confirm changing the version of "{pkgName}" to "{newVersion}" from "{oldVersion}"? (the reduced version will not affect devices that have been installed with a higher version)',
    tip_delete_group: 'Confirm to delete the group [{pkgName}]?',
    tipDeleteOperator: 'Confirm to delete the operator [{operatorName}]?',
    tip_selectVersion: 'Please select the APK version',
    version: 'App Version',
    selectApp: 'Select App',
    curApp: 'Current App',
    otherApp: 'Other App',
  },
  sysapp: {
    version: 'Version',
    installDevCount: 'Installed',
    updateMode: 'Update mode',
    installMode: 'Install mode',
    installStytle: 'Installation',
    production: 'Production/Pilot',
    upload: "Upload",
    uploadTime: "Upload time",
    normalUpdate: 'Normal update',
    silentUpdate: 'Auto update',
    patchInstall: 'Normal install',
    deleteInstall: "Delete install",
    productionStyle: "Production",
    grayscaleStyle: "Pilot",
    appName: 'App name',
    appPackageName: 'Package name',
    fileSize: 'File size',
    fileMd5: 'File md5',
    handHeld: 'Portrait',
    hd: "Landscape",
    supportDevice: 'Support Device',
    pleaseSelectSupportDevice: 'Please select support device',
    usage: 'App release method',
    testUsage: 'Pilot',
    prodUsage: 'Production',
    remark: 'Remark',
    downloadBtn: 'Download',
    downloadFailed: "Download failed",
    deleteConfirm: 'Confirm to delete this application ?',
    preStep: 'Pre step',
    uploadFileStep: 'UPLOAD FILE',
    verifyStep: 'VERIFICATION INFORMATION',
    successStep: 'UPLOAD SUCCESSFULLY',
    uploadTip1: 'Drop file here or ',
    uploadTip2: 'click to upload',
    uploadTip3: 'Please select APK file',
    appType: 'ApplicationType',
    uploadTitle1: 'Publish a application of your own',
    uploadTitle2: 'Firstly you need to provide a file',
    updateToGroup: 'Update to group',
    bindSn: 'Bind SN',
    devSn: 'SN',
    syncAppTip: 'Synchronize the new version to the group of the application',
    duplicateSn: 'Sn already exists!',
    oldVersionTip: 'The uploaded version is less than the current latest version',
    grayscaleTip: 'The grayscale mode should bind at least one SN!',
    terminalListBtn: 'Terminal list',
    productionReleaseBtn: 'Production Release',
  },
  manufacturer: {
    selectTip: 'Select manufacturer',
    addBtn: 'Add manufacturer',
    updateBtn: 'Update manufacturer',
    addConfirm: 'Confirm to add this manufacturer?',
    name: 'Name',
    manufacturerCode: 'Code',
    account: 'Username',
    address: 'Address',
    email: 'E-mail',
    shortName: 'Short name',
  },
  device: {
    resetBtn: 'Reset',
    modelCode: 'Model',
    sn: 'SN',
    operatorName: 'Operator',
    status: 'Status',
    online: 'online',
    offline: 'offline',
    activeTime: 'Active',
    createTime: 'Create time',
    bootTimes: 'Boot times',
    printMeters: 'Print meters',
    usbTime: 'USB pull/plug times',
    storageTotal: 'Total memory capacity(Gb)',
    storage: 'Storage capacity(Gb)',
    memoryTimes: 'Memory read/write times',
    powerKeyTimes: 'Power key click times',
    screenTimes: 'Screen click times',
    cameraTimes: 'Camera open times',
    chargeTimes: 'Charge time',
    hardwareId: 'Hardware identification code',
    bluetoothStatus: 'Bluetooth status',
    hardwareConfig: 'Hardware configuration code',
    basebankVersion: 'Baseband version',
    secureAppVersion: 'Security module application version',
    secureFwVersion: 'Security module firmware version',
    secureBootVersion: 'Security module boot version',
    sysFwId: 'System firmware identification code',
    deviceManufacturer: 'Manufacturer Information',
    cameraFrontModel: 'Front camera model',
    cameraBackModel: 'Rear camera model',
    latLng: 'Latitude and longitude',
    lockState: 'Lock state',
    lastPowerTime: 'Last power on time',
    currentRunTime: 'Current running time',
    softwareAttackCounts: 'Software attack',
    softwareAttackTime: 'Software attack duration',
    hardwareAttackCounts: 'Hardware attack',
    hardwareAttackTime: 'Hardware attack duration',
    imei: 'Imei',
    wifiStatus: 'WIFI',
    merchant: 'Merchant',
    remark: 'Remark',
    outOfBoundary: 'Out of boundary',
    appAuthVer: 'appAuthVer',
    firmwareVersion: 'Firmware version',
    cmdType: 'Command Type',
    cmdStatus: 'Status',
    powerConsumptionRate: 'Power Consumption',
    thirdPartyApp: '> Third-party Applications',
    controlledApp: '> Controlled Application',
    groupApp: '> Group Application',
    firmwareInfo: '> Firmware',
    location: '> Location',
    fullView: 'TERMINAL FULL VIEW',
    cmdHistory: '> Command History',
    platform: 'Platform'
  },
  command: {
    desc: {
      A0: 'Command Query',
      A1: 'Send Message',
      A2: 'Uninstall App',
      A3: 'Close Specified App',
      A4: 'Lock Terminal',
      A5: 'Unlock Terminal',
      A6: 'Extract Log',
      A7: 'Log Monitor',
      A8: 'Restart',
      A9: 'Shutdown',
      AA: 'Screen Capture',
      AB: 'Push Task',
      AC: 'Start Application',
      AD: 'FlyDesk',
      B1: 'Collect App Information',
      B2: 'Check Update',
      B3: 'Download Online Parameter',
      B4: 'Recovery Terminal',
      B5: 'Recovery Terminal Forcibly',
      B6: 'Sleep Duration',
      B8: 'Custom Command',
      B9: 'Fetch Files',
      BA: 'Screen Capture',
      BB: 'Hardware Test',
      D0: 'Runtime Status Upload',
      D1: 'System Parameter Setting',
      D2: 'FlyKey',
    },
    status: {
      // 0:未推送  1:推送中 2:执行中 3:推送失败 4:暂停 5:  6: 7: 8: 9:
      un_push: 'Not pushed',
      pushing: 'Pushing',
      executing: 'Executing',
      push_fail: 'Push failed',
      pause: 'Pause',
      push_success: 'Execution succeed',
      execution_failed: 'Execution failed',
      waiting_notification: 'Waiting for notification',
      terminal_not_online: 'THE TERMINAL IS NOT ONLINE',
      timeout: 'Command timeout'
    }
  },
  white_list: {
    title: 'White List',
    addAppBtn: 'Add Application',
    application: 'Application',
    bindRecord: 'Binding Record',
    tipDeleteApplication: 'Confirm to delete the application [{appPkgName}]?',
    tipDeleteOperator: 'Confirm to delete the operator [{operatorName}]?',
    appPackageName: 'Application Package Name',
    pubKey: 'Application Public Key',
    tipSelectOper: 'Please select operators',
    operatorName: 'Operator Name',
  },
  role: {
    role_label: 'Role',
    role_create_tip: 'Please create a role first',
    role_click_tip: 'click here',
    role_add_tip: 'to add role',
    role_user_amount: 'User amount',
    permission: "Permission",
    add_role_title: 'Add role',
    edit_role_title: "Edit role",
    role_delete_confirm: 'Confirm to delete role',
    delete_success: 'Delete success',
    permission_select_tip: 'Please select permissions'
  },
  user: {
    page_title: 'Users',
    username: 'Account(Email)',
    user_type: 'User Type',
    contact_name: 'Contact Name',
    organization: 'Organization',
    status: 'Status',
    last_login_time: 'Last Login Time',
    lock: 'Lock',
    unlock: 'Unlock',
    locked: 'Locked',
    unlocked: 'Unlocked',
    lock_success: 'Lock Success',
    unlock_success: 'Unlock Success',
    sure_to_lock_user: 'Are you sure to lock this user ',
    sure_to_unlock_user: 'Are you sure to unlock this user ',
    phone: 'Phone',
    edit_user_title: 'Edit user',
    add_user_title: 'Add user',
    country_or_region: 'Country/Region',
    select_role_tip: 'Please select roles',
    query_condition: 'Account(Email)/Contact Name/Mobile',
    max_role_error: 'A user can only have 5 roles at most'
  },
  func: {
    view: 'View',
    manage: 'Manage'
  },
  contact: {
    name: 'Name',
    email: 'Email',
    mobile: 'Mobile',
    content: 'Content',
    remark: 'Remark',
    company: 'Company',
    type: 'Business Type',
    role: 'Role',
    country_or_region: 'Country/Region',
    unhandled: 'Unhandled',
    handled: 'Handled',
    edit_remark: 'Edit Remark',
    status: 'Status',
    bank_or_acquirer: 'Bank / Acquirer',
    distributor_or_reseller: 'Distributor / Reseller',
    psp: 'PSP',
    isv: 'ISV',
    others: 'Others',
    manager: 'Manager',
    marketing: 'Marketing',
    developer: 'Developer',
    others_role: 'Others',
    remark_not_null_tip: 'Please input remark',
    handling_time: 'Handling Time',
    operation: 'Operation'
  },
  country_or_region: {
    AND: 'Andorra',
    ARE: 'United Arab Emirates',
    AFG: 'Afghanistan',
    ATG: 'Antigua and Barbuda',
    AIA: 'Anguilla',
    ALB: 'Albania',
    ARM: 'Armenia',
    AGO: 'Angola',
    ATA: 'Antarctica',
    ARG: 'Argentina',
    ASM: 'American Samoa',
    AUT: 'Austria',
    AUS: 'Australia',
    ABW: 'Aruba',
    ALA: 'Åaland Islands',
    AZE: 'Azerbaijan',
    BIH: 'Bosnia and Herzegovina',
    BRB: 'Barbados',
    BGD: 'Bangladesh',
    BEL: 'Belgium',
    BFA: 'Burkina Faso',
    BGR: 'Bulgaria',
    BHR: 'Bahrain',
    BDI: 'Burundi',
    BEN: 'Benin',
    BLM: 'Saint Barthelemy',
    BMU: 'Bermuda',
    BRN: 'Brunei Darussalam',
    BOL: 'Bolivia, Plurinational',
    BES: 'Bonaire, Sint Eustatius and Saba',
    BRA: 'Brazil',
    BHS: 'Bahamas',
    BTN: 'Bhutan',
    BVT: 'Bouvet Island',
    BWA: 'Botswana',
    BLR: 'Belarus',
    BLZ: 'Belize',
    CAN: 'Canada',
    CCK: 'Cocos (Keeling) Islands',
    COD: 'Congo, the Democratic Republic of the',
    CAF: 'Central African Republic',
    COG: 'Congo',
    CHE: 'Switzerland',
    CIV: "Cote d'Ivoire",
    COK: 'Cook Islands',
    CHL: 'Chile',
    CMR: 'Cameroon',
    CHN: 'China',
    COL: 'Colombia',
    CRI: 'Costa Rica',
    CUB: 'Cuba',
    CPV: 'Cape Verde',
    CUW: 'Curacao',
    CXR: 'Christmas Island',
    CYP: 'Cyprus',
    CZE: 'Czech Republic',
    DEU: 'Germany',
    DJI: 'Djibouti',
    DNK: 'Denmark',
    DMA: 'Dominica',
    DOM: 'Dominican Republic',
    DZA: 'Algeria',
    ECU: 'Ecuador',
    EST: 'Estonia',
    EGY: 'Egypt',
    ESH: 'Western Sahara',
    ERI: 'Eritrea',
    ESP: 'Spain',
    ETH: 'Ethiopia',
    FIN: 'Finland',
    FJI: 'Fiji',
    FLK: 'Falkland Islands (Malvinas)',
    FSM: 'Micronesia, Federated States of',
    FRO: 'Faroe Islands',
    FRA: 'France',
    GAB: 'Gabon',
    GBR: 'United Kingdom',
    GRD: 'Grenada',
    GEO: 'Georgia',
    GUF: 'French Guiana',
    GGY: 'Guernsey',
    GHA: 'Ghana',
    GIB: 'Gibraltar',
    GRL: 'Greenland',
    GMB: 'Gambia',
    GIN: 'Guinea',
    GLP: 'Guadeloupe',
    GNQ: 'Equatorial Guinea',
    GRC: 'Greece',
    SGS: 'South Georgia and the South Sandwich Islands',
    GTM: 'Guatemala',
    GUM: 'Guam',
    GNB: 'Guinea-Bissau',
    GUY: 'Guyana',
    HKG: 'Hong Kong',
    HMD: 'Heard Island and McDonald Islands',
    HND: 'Honduras',
    HRV: 'Croatia',
    HTI: 'Haiti',
    HUN: 'Hungary',
    IDN: 'Indonesia',
    IRL: 'Ireland',
    ISR: 'Israel',
    IMN: 'Isle of Man',
    IND: 'India',
    IOT: 'British Indian Ocean Territory',
    IRQ: 'Iraq',
    IRN: 'Iran, Islamic Republic of',
    ISL: 'Iceland',
    ITA: 'Italy',
    JEY: 'Jersey',
    JAM: 'Jamaica',
    JOR: 'Jordan',
    JPN: 'Japan',
    KEN: 'Kenya',
    KGZ: 'Kyrgyzstan',
    KHM: 'Cambodia',
    KIR: 'Kiribati',
    COM: 'Comoros',
    KNA: 'Saint Kitts and Nevis',
    PRK: "Korea, Democratic People's Republic of",
    KOR: 'Korea, Republic of',
    KWT: 'Kuwait',
    CYM: 'Cayman Islands',
    KAZ: 'Kazakhstan',
    LAO: "Lao People's Democratic Republic",
    LBN: 'Lebanon',
    LCA: 'Saint Lucia',
    LIE: 'Liechtenstein',
    LKA: 'Sri Lanka',
    LBR: 'Liberia',
    LSO: 'Lesotho',
    LTU: 'Lithuania',
    LUX: 'Luxembourg',
    LVA: 'Latvia',
    LBY: 'Libya',
    MAR: 'Morocco',
    MCO: 'Monaco',
    MDA: 'Moldova, Republic of',
    MNE: 'Montenegro',
    MAF: 'Saint Martin (French part)',
    MDG: 'Madagascar',
    MHL: 'Marshall islands',
    MKD: 'Macedonia, the former Yugoslav Republic of',
    MLI: 'Mali',
    MMR: 'Myanmar',
    MNG: 'Mongolia',
    MAC: 'Macao',
    MNP: 'Northern Mariana Islands',
    MTQ: 'Martinique',
    MRT: 'Mauritania',
    MSR: 'Montserrat',
    MLT: 'Malta',
    MUS: 'Mauritius',
    MDV: 'Maldives',
    MWI: 'Malawi',
    MEX: 'Mexico',
    MYS: 'Malaysia',
    MOZ: 'Mozambique',
    NAM: 'Namibia',
    NCL: 'New Caledonia',
    NER: 'Niger',
    NFK: 'Norfolk Island',
    NGA: 'Nigeria',
    NIC: 'Nicaragua',
    NKR: 'Nagorno-Karabakh',
    NLD: 'Netherlands',
    NOR: 'Norway',
    NPL: 'Nepal',
    NRU: 'Nauru',
    NIU: 'Niue',
    NZL: 'New Zealand',
    OMN: 'Oman',
    PAN: 'Panama',
    PER: 'Peru',
    PYF: 'French Polynesia',
    PNG: 'Papua New Guinea',
    PHL: 'Philippines',
    PAK: 'Pakistan',
    POL: 'Poland',
    SPM: 'Saint Pierre and Miquelon',
    PCN: 'Pitcairn Islands',
    PRI: 'Puerto Rico',
    PSE: 'Palestine, State of',
    PRT: 'Portugal',
    PLW: 'Palau',
    PRY: 'Paraguay',
    QAT: 'Qatar',
    REU: 'Réunion',
    ROU: 'Romania',
    SRB: 'Serbia',
    RUS: 'Russian Federation',
    RWA: 'Rwanda',
    SAU: 'Saudi Arabia',
    SLB: 'Solomon Islands',
    SYC: 'Seychelles',
    SDN: 'Sudan',
    SWE: 'Sweden',
    SGP: 'Singapore',
    SHN: 'Saint Helena, Ascension and Tristan da Cunha',
    SVN: 'Slovenia',
    SJM: 'Svalbard and Jan Mayen',
    SVK: 'Slovakia',
    SLE: 'Sierra Leone',
    SMR: 'San Marino',
    SEN: 'Senegal',
    SOM: 'Somalia',
    SUR: 'Suriname',
    SSD: 'South Sudan',
    STP: 'Sao Tome and Principe',
    SLV: 'El Salvador',
    SXM: 'Sint Maarten (Dutch part)',
    SYR: 'Syrian Arab Republic',
    SWZ: 'Swaziland',
    TCA: 'Turks and Caicos Islands',
    TCD: 'Chad',
    ATF: 'French Southern Territories',
    TGO: 'Togo',
    THA: 'Thailand',
    TJK: 'Tajikistan',
    TKL: 'Tokelau',
    TLS: 'Timor-Leste',
    TKM: 'Turkmenistan',
    TUN: 'Tunisia',
    TON: 'Tonga',
    TUR: 'Turkey',
    TTO: 'Trinidad and Tobago',
    TUV: 'Tuvalu',
    TWN: 'Taiwan, Province of China',
    TZA: 'Tanzania, United Republic of',
    UKR: 'Ukraine',
    UGA: 'Uganda',
    UMI: 'United States Minor Outlying Islands',
    USA: 'United States',
    URY: 'Uruguay',
    UZB: 'Uzbekistan',
    VAT: 'Holy See (Vatican City State)',
    VCT: 'Saint Vincent and the Grenadines',
    VEN: 'Venezuela, Bolivarian Republic of',
    VGB: 'Virgin Islands, U.S.',
    VIR: 'United States Virgin Islands',
    VNM: 'Vietnam',
    VUT: 'Vanuatu',
    WLF: 'Wallis and Futuna',
    WSM: 'Samoa',
    YEM: 'Yemen',
    MYT: 'Mayotte',
    ZAF: 'South Africa',
    ZMB: 'Zambia',
    ZWE: 'Zimbabwe'
  },
  contact_us: {
    name: 'Name',
    email: 'Email',
    mobile: 'Mobile',
    content: 'Content',
    remark: 'Remark',
    company: 'Company',
    type: 'Type',
    role: 'Role',
  },
  dashboard: {
    'number_of_new_operators_in_the_last_30_days': 'Number of new operators in the last 30 days',
    'number_of_merchants': 'Number of merchants',
    'number_of_new_merchants': 'Number of new merchants',
    'number_of_new_operators': 'Number of new operators',
    'top_10_merchants_and_active_merchants': 'The operator\'s top 10 merchants and their active merchants',
    'active_merchants': 'Active merchants'
  },
  data_center: {
    new_operator_count: 'Number of new operators',
    active_operator_count: 'Operator Activity',
    new_user_count: 'Number of new users',
    new_app_version_count: 'Number of new TOMS application versions',
    appstore_new_app_version_count: 'Number of new application versions in the application store',
    appstore_new_app_download_trend: 'Number of new application downloads in the application store',
    toms_app_new_download_trend: 'Number of new application downloads in the TOMS',
    toms_app_total_count: 'Total number of TOMS applications',
    toms_app_download_total_count: 'Total number of TOMS application downloads',
    appstore_app_total_count: 'Total number of applications in the application store',
    appstore_app_download_total_count: 'Total number of downloads of applications from the application Store',
    flydesk_cmd_new_usage_times: 'New usage times of FlyDesk commands',
    flykey_cmd_new_usage_times: 'New usage times of FlyKey commands',
    new_terminal_count: 'Number of new terminals',
    active_terminal_count: 'Number of active terminals',
    terminal_total_count: 'Total number of terminals'
  },
  developer_app: {
    app_name: 'App Name',
    icon: 'App Icon',
    version: 'App Version',
    version_code: 'App Version Code',
    app_submit_time: 'App Submission Time',
    signer: 'Signer',
    examiner: 'Examiner',
    examine: 'Examine',
    status: 'Status',
    category: 'Category',
    app_image: 'App Resource Image',
    explanation: 'Explanation',
    permission_list: 'App Permission List',
    auth: 'Permission',
    app_resource: 'App Resource',
    app_permission: 'App Permissions',
    u_key: 'UKey',
    test_device: 'Applicable Device',
    device_model: 'Device Model',
    test_remark: 'Test Remark',
    sign: {
      app_summary: 'Application Summary',
      status_option: [
        {label: 'Pending Signature', value: 0},
        {label: 'Signed', value: 1},
        {label: 'Signing Failed', value: 2}
      ],
    },
    initial_examine: {
      examine: 'Initial Examine',
      examine_time: 'Initial Examine Time',
      explanation: 'Initial Examine Explanation',
      result_explanation: 'Examine Result Explanation',
      result_explanation_tip: 'Examine Result Description (show to developer)',
      result_remark: 'Examine Result Remark',
      result_remark_tip: 'Remarks On The Examine Results (displayed to system insiders)',
      pass: 'Pass',
      reject: 'Reject',
      status_option: [
        {label: 'Pending Examine', value: 0},
        {label: 'Pass', value: 1},
        {label: 'Reject', value: 2},
      ],
      examine_result_explain: 'Please enter the reason for rejection'
    },
    status_option: [
      {label: 'Pending Upload', value: 11},
      {label: 'Examining', value: 9},
      {label: 'Initial Examine', value: 7},
      {label: 'Rejected', value: 6},
      {label: 'To Be Released', value: 3},
      {label: 'Released', value: 1},
      {label: 'Removed', value: 0}
    ],
    version_status_option: [
      {label: 'Examining', value: 9},
      {label: 'Initial Examine', value: 7},
      {label: 'Rejected', value: 6},
      {label: 'To Be Released', value: 5},
      {label: 'Removed', value: 2},
      {label: 'Released', value: 1},
      {label: 'Cancel/End', value: 0}
    ],
    model_test_result: [
      {label: 'To Be Tested', value: 0},
      {label: 'Pass', value: 1},
      {label: 'Reject', value: 2},
    ],
    permission: {
      MANAGE_NEWLAND: 'New continent firmware general permission. ',
      MANAGE_NEWLANDUART3: 'Newland physical serial port operation authority. ',
      MANAGE_NEWLANDGPIO: 'No longer used. ',
      MANAGE_NEWLANDMODEM: 'No longer used. ',
      MANAGE_ANALOG_SERIAL: 'Newland analog serial port operation authority. ',
      ACCEPT_HANDOVER: 'Allows a calling app to continue a call which was started in another app.',
      ACCESS_BACKGROUND_LOCATION: 'Allows an app to access location in the background.',
      ACCESS_BLOBS_ACROSS_USERS: 'Allows an application to access data blobs across users.',
      ACCESS_CHECKIN_PROPERTIES: 'Allows read/write access to the "properties" table in the checkin database, to change values that get uploaded.',
      ACCESS_COARSE_LOCATION: 'Allows an app to access approximate location.',
      ACCESS_FINE_LOCATION: 'Allows an app to access precise location.',
      ACCESS_LOCATION_EXTRA_COMMANDS: 'Allows an application to access extra location provider commands.',
      ACCESS_MEDIA_LOCATION: 'Allows an application to access any geographic locations persisted in the user\'s shared collection.',
      ACCESS_NETWORK_STATE: 'Allows applications to access information about networks.',
      ACCESS_NOTIFICATION_POLICY: 'Marker permission for applications that wish to access notification policy.',
      ACCESS_WIFI_STATE: 'Allows applications to access information about Wi-Fi networks.',
      ACCOUNT_MANAGER: 'Allows applications to call into AccountAuthenticators.',
      ACTIVITY_RECOGNITION: 'Allows an application to recognize physical activity.',
      ADD_VOICEMAIL: 'Allows an application to add voicemails into the system.',
      ANSWER_PHONE_CALLS: 'Allows the app to answer an incoming phone call.',
      BATTERY_STATS: 'Allows an application to collect battery statistics; Protection level: signature|privileged|development',
      BIND_ACCESSIBILITY_SERVICE: 'Must be required by an AccessibilityService, to ensure that only the system can bind to it.',
      BIND_APPWIDGET: 'Allows an application to tell the AppWidget service which application can access AppWidget\'s data.',
      BIND_AUTOFILL_SERVICE: 'Must be required by a AutofillService, to ensure that only the system can bind to it.',
      BIND_CALL_REDIRECTION_SERVICE: 'Must be required by a CallRedirectionService, to ensure that only the system can bind to it.',
      BIND_CARRIER_MESSAGING_CLIENT_SERVICE: 'A subclass of CarrierMessagingClientService must be protected with this permission.',
      BIND_CARRIER_MESSAGING_SERVICE: 'This constant was deprecated in API level 23. Use BIND_CARRIER_SERVICES instead',
      BIND_CARRIER_SERVICES: 'The system process that is allowed to bind to services in carrier apps will have this permission.',
      BIND_CHOOSER_TARGET_SERVICE: 'This constant was deprecated in API level 30. For publishing direct share targets, please follow the instructions in https://developer.android.com/training/sharing/receive.html#providing-direct-share-targets instead.',
      BIND_COMPANION_DEVICE_SERVICE: 'Must be required by any CompanionDeviceServices to ensure that only the system can bind to it.',
      BIND_CONDITION_PROVIDER_SERVICE: 'Must be required by a ConditionProviderService, to ensure that only the system can bind to it.',
      BIND_CONTROLS: 'Allows SystemUI to request third party controls.',
      BIND_DEVICE_ADMIN: 'Must be required by device administration receiver, to ensure that only the system can interact with it.',
      BIND_DREAM_SERVICE: 'Must be required by an DreamService, to ensure that only the system can bind to it.',
      BIND_INCALL_SERVICE: 'Must be required by a InCallService, to ensure that only the system can bind to it.',
      BIND_INPUT_METHOD: 'Must be required by an InputMethodService, to ensure that only the system can bind to it.',
      BIND_MIDI_DEVICE_SERVICE: 'Must be required by an MidiDeviceService, to ensure that only the system can bind to it.',
      BIND_NFC_SERVICE: 'Must be required by a HostApduService or OffHostApduService to ensure that only the system can bind to it.',
      BIND_NOTIFICATION_LISTENER_SERVICE: 'Must be required by an NotificationListenerService, to ensure that only the system can bind to it.',
      BIND_PRINT_SERVICE: 'Must be required by a PrintService, to ensure that only the system can bind to it.',
      BIND_QUICK_ACCESS_WALLET_SERVICE: 'Must be required by a QuickAccessWalletService to ensure that only the system can bind to it.',
      BIND_QUICK_SETTINGS_TILE: 'Allows an application to bind to third party quick settings tiles.',
      BIND_REMOTEVIEWS: 'Must be required by a RemoteViewsService, to ensure that only the system can bind to it.',
      BIND_SCREENING_SERVICE: 'Must be required by a CallScreeningService, to ensure that only the system can bind to it.',
      BIND_TELECOM_CONNECTION_SERVICE: 'Must be required by a ConnectionService, to ensure that only the system can bind to it.',
      BIND_TEXT_SERVICE: 'Must be required by a TextService (e.g. SpellCheckerService) to ensure that only the system can bind to it.',
      BIND_TV_INPUT: 'Must be required by a TvInputService to ensure that only the system can bind to it.',
      BIND_TV_INTERACTIVE_APP: 'Must be required by a TvInteractiveAppService to ensure that only the system can bind to it.',
      BIND_VISUAL_VOICEMAIL_SERVICE: 'Must be required by a link VisualVoicemailService to ensure that only the system can bind to it.',
      BIND_VOICE_INTERACTION: 'Must be required by a VoiceInteractionService, to ensure that only the system can bind to it.',
      BIND_VPN_SERVICE: 'Must be required by a VpnService, to ensure that only the system can bind to it.',
      BIND_VR_LISTENER_SERVICE: 'Must be required by an VrListenerService, to ensure that only the system can bind to it.',
      BIND_WALLPAPER: 'Must be required by a WallpaperService, to ensure that only the system can bind to it.',
      BLUETOOTH: 'Allows applications to connect to paired bluetooth devices.',
      BLUETOOTH_ADMIN: 'Allows applications to discover and pair bluetooth devices.',
      BLUETOOTH_ADVERTISE: 'Required to be able to advertise to nearby Bluetooth devices.',
      BLUETOOTH_CONNECT: 'Required to be able to connect to paired Bluetooth devices.',
      BLUETOOTH_PRIVILEGED: 'Allows applications to pair bluetooth devices without user interaction, and to allow or disallow phonebook access or message access.',
      BLUETOOTH_SCAN: 'Required to be able to discover and pair nearby Bluetooth devices.',
      BODY_SENSORS: 'Allows an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate.',
      BODY_SENSORS_BACKGROUND: 'Allows an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate.',
      BROADCAST_PACKAGE_REMOVED: 'Allows an application to broadcast a notification that an application package has been removed.',
      BROADCAST_SMS: 'Allows an application to broadcast an SMS receipt notification.',
      BROADCAST_STICKY: 'Allows an application to broadcast sticky intents.',
      BROADCAST_WAP_PUSH: 'Allows an application to broadcast a WAP PUSH receipt notification.',
      CALL_COMPANION_APP: 'Allows an app which implements the InCallService API to be eligible to be enabled as a calling companion app.',
      CALL_PHONE: 'Allows an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call.',
      CALL_PRIVILEGED: 'Allows an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed.',
      CAMERA: 'Required to be able to access the camera device.',
      CAPTURE_AUDIO_OUTPUT: 'Allows an application to capture audio output.',
      CHANGE_COMPONENT_ENABLED_STATE: 'Allows an application to change whether an application component (other than its own) is enabled or not.',
      CHANGE_CONFIGURATION: 'Allows an application to modify the current configuration, such as locale.',
      CHANGE_NETWORK_STATE: 'Allows applications to change network connectivity state.',
      CHANGE_WIFI_MULTICAST_STATE: 'Allows applications to enter Wi-Fi Multicast mode.',
      CHANGE_WIFI_STATE: 'Allows applications to change Wi-Fi connectivity state.',
      CLEAR_APP_CACHE: 'Allows an application to clear the caches of all installed applications on the device.',
      CONTROL_LOCATION_UPDATES: 'Allows enabling/disabling location update notifications from the radio.',
      DELETE_CACHE_FILES: 'Old permission for deleting an app\'s cache files, no longer used, but signals for us to quietly ignore calls instead of throwing an exception.',
      DELETE_PACKAGES: 'Allows an application to delete packages.',
      DELIVER_COMPANION_MESSAGES: 'Allows an application to deliver companion messages to system',
      DIAGNOSTIC: 'Allows applications to RW to diagnostic resources.',
      DISABLE_KEYGUARD: 'Allows applications to disable the keyguard if it is not secure.',
      DUMP: 'Allows an application to retrieve state dump information from system services.',
      EXPAND_STATUS_BAR: 'Allows an application to expand or collapse the status bar.',
      FACTORY_TEST: 'Run as a manufacturer test application, running as the root user.',
      FOREGROUND_SERVICE: 'Allows a regular application to use Service.startForeground.',
      GET_ACCOUNTS: 'Allows access to the list of accounts in the Accounts Service.',
      GET_ACCOUNTS_PRIVILEGED: 'Allows access to the list of accounts in the Accounts Service.',
      GET_PACKAGE_SIZE: 'Allows an application to find out the space used by any package.',
      GET_TASKS: 'This constant was deprecated in API level 21. No longer enforced.',
      GLOBAL_SEARCH: 'This permission can be used on content providers to allow the global search system to access their data.',
      HIDE_OVERLAY_WINDOWS: 'Allows an app to prevent non-system-overlay windows from being drawn on top of it',
      HIGH_SAMPLING_RATE_SENSORS: 'Allows an app to access sensor data with a sampling rate greater than 200 Hz.',
      INSTALL_LOCATION_PROVIDER: 'Allows an application to install a location provider into the Location Manager.',
      INSTALL_PACKAGES: 'Allows an application to install packages.',
      INSTALL_SHORTCUT: 'Allows an application to install a shortcut in Launcher.',
      INSTANT_APP_FOREGROUND_SERVICE: 'Allows an instant app to create foreground services.',
      INTERACT_ACROSS_PROFILES: 'Allows interaction across profiles in the same profile group.',
      INTERNET: 'Allows applications to open network sockets.',
      KILL_BACKGROUND_PROCESSES: 'Allows an application to call ActivityManager.killBackgroundProcesses(String).',
      LAUNCH_MULTI_PANE_SETTINGS_DEEP_LINK: 'An application needs this permission for Settings.ACTION_SETTINGS_EMBED_DEEP_LINK_ACTIVITY to show its Activity embedded in Settings app.',
      LOADER_USAGE_STATS: 'Allows a data loader to read a package\'s access logs.',
      LOCATION_HARDWARE: 'Allows an application to use location features in hardware, such as the geofencing api.',
      MANAGE_DOCUMENTS: 'Allows an application to manage access to documents, usually as part of a document picker.',
      MANAGE_EXTERNAL_STORAGE: 'Allows an application a broad access to external storage in scoped storage.',
      MANAGE_MEDIA: 'Allows an application to modify and delete media files on this device or any connected storage device without user confirmation.',
      MANAGE_ONGOING_CALLS: 'Allows to query ongoing call details and manage ongoing calls Protection level: signature|appop',
      MANAGE_OWN_CALLS: 'Allows a calling application which manages its own calls through the self-managed ConnectionService APIs.',
      MANAGE_WIFI_INTERFACES: 'Allows applications to get notified when a Wi-Fi interface request cannot be satisfied without tearing down one or more other interfaces, and provide a decision whether to approve the request or reject it.',
      MANAGE_WIFI_NETWORK_SELECTION: 'This permission is used to let OEMs grant their trusted app access to a subset of privileged wifi APIs to improve wifi performance.',
      MASTER_CLEAR: 'Not for use by third-party applications.',
      MEDIA_CONTENT_CONTROL: 'Allows an application to know what content is playing and control its playback.',
      MODIFY_AUDIO_SETTINGS: 'Allows an application to modify global audio settings.',
      MODIFY_PHONE_STATE: 'Allows modification of the telephony state - power on, mmi, etc.',
      MOUNT_FORMAT_FILESYSTEMS: 'Allows formatting file systems for removable storage.',
      MOUNT_UNMOUNT_FILESYSTEMS: 'Allows mounting and unmounting file systems for removable storage.',
      NEARBY_WIFI_DEVICES: 'Required to be able to advertise and connect to nearby devices via Wi-Fi.',
      NFC: 'Allows applications to perform I/O operations over NFC.',
      NFC_PREFERRED_PAYMENT_INFO: 'Allows applications to receive NFC preferred payment service information.',
      NFC_TRANSACTION_EVENT: 'Allows applications to receive NFC transaction events.',
      OVERRIDE_WIFI_CONFIG: 'Allows an application to modify any wifi configuration, even if created by another application.',
      PACKAGE_USAGE_STATS: 'Allows an application to collect component usage statistics Declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application.',
      PERSISTENT_ACTIVITY: 'This constant was deprecated in API level 15. This functionality will be removed in the future; please do not use. Allow an application to make its activities persistent.',
      POST_NOTIFICATIONS: 'Allows an app to post notifications;Protection level: dangerous',
      PROCESS_OUTGOING_CALLS: 'This constant was deprecated in API level 29. Applications should use CallRedirectionService instead of the Intent.ACTION_NEW_OUTGOING_CALL broadcast.',
      QUERY_ALL_PACKAGES: 'Allows query of any normal app on the device, regardless of manifest declarations.',
      READ_ASSISTANT_APP_SEARCH_DATA: 'Allows an application to query over global data in AppSearch that\'s visible to the ASSISTANT role.',
      READ_BASIC_PHONE_STATE: 'Allows read only access to phone state with a non dangerous permission, including the information like cellular network type, software version.',
      READ_CALENDAR: 'Allows an application to read the user\'s calendar data.',
      READ_CALL_LOG: 'Allows an application to read the user\'s call log.',
      READ_CONTACTS: 'Allows an application to read the user\'s contacts data.',
      READ_EXTERNAL_STORAGE: 'Allows an application to read from external storage.',
      READ_HOME_APP_SEARCH_DATA: 'Allows an application to query over global data in AppSearch that\'s visible to the HOME role.',
      READ_INPUT_STATE: 'This constant was deprecated in API level 16. The API that used this permission has been removed.',
      READ_LOGS: 'Allows an application to read the low-level system log files.',
      READ_MEDIA_AUDIO: 'Allows an application to read audio files from external storage.',
      READ_MEDIA_IMAGES: 'Allows an application to read image files from external storage.',
      READ_MEDIA_VIDEO: 'Allows an application to read video files from external storage.',
      READ_NEARBY_STREAMING_POLICY: 'Allows an application to read nearby streaming policy.',
      READ_PHONE_NUMBERS: 'Allows read access to the device\'s phone number(s).',
      READ_PHONE_STATE: 'Allows read only access to phone state, including the current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device.',
      READ_PRECISE_PHONE_STATE: 'Allows read only access to precise phone state.',
      READ_SMS: 'Allows an application to read SMS messages.',
      READ_SYNC_SETTINGS: 'Allows applications to read the sync settings.',
      READ_SYNC_STATS: 'Allows applications to read the sync stats.',
      READ_VOICEMAIL: 'Allows an application to read voicemails in the system.',
      REBOOT: 'Required to be able to reboot the device.',
      RECEIVE_BOOT_COMPLETED: 'Allows an application to receive the Intent.ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting.',
      RECEIVE_MMS: 'Allows an application to monitor incoming MMS messages.',
      RECEIVE_SMS: 'Allows an application to receive SMS messages.',
      RECEIVE_WAP_PUSH: 'Allows an application to receive WAP push messages.',
      RECORD_AUDIO: 'Allows an application to record audio.',
      REORDER_TASKS: 'Allows an application to change the Z-order of tasks.',
      REQUEST_COMPANION_PROFILE_APP_STREAMING: 'Allows application to request to be associated with a virtual display capable of streaming Android applications (AssociationRequest.DEVICE_PROFILE_APP_STREAMING) by CompanionDeviceManager.',
      REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION: 'Allows application to request to be associated with a vehicle head unit capable of automotive projection (AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION) by CompanionDeviceManager.',
      REQUEST_COMPANION_PROFILE_COMPUTER: 'Allows application to request to be associated with a computer to share functionality and/or data with other devices, such as notifications, photos and media (AssociationRequest.DEVICE_PROFILE_COMPUTER) by CompanionDeviceManager.',
      REQUEST_COMPANION_PROFILE_WATCH: 'Allows app to request to be associated with a device via CompanionDeviceManager as a "watch" Protection level: normal',
      REQUEST_COMPANION_RUN_IN_BACKGROUND: 'Allows a companion app to run in the background.',
      REQUEST_COMPANION_SELF_MANAGED: 'Allows an application to create a "self-managed" association.',
      REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND: 'Allows a companion app to start a foreground service from the background.',
      REQUEST_COMPANION_USE_DATA_IN_BACKGROUND: 'Allows a companion app to use data in the background.',
      REQUEST_DELETE_PACKAGES: 'Allows an application to request deleting packages.',
      REQUEST_IGNORE_BATTERY_OPTIMIZATIONS: 'Permission an application must hold in order to use Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS.',
      REQUEST_INSTALL_PACKAGES: 'Allows an application to request installing packages.',
      REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE: 'Allows an application to subscribe to notifications about the presence status change of their associated companion device',
      REQUEST_PASSWORD_COMPLEXITY: 'Allows an application to request the screen lock complexity and prompt users to update the screen lock to a certain complexity level.',
      RESTART_PACKAGES: 'This constant was deprecated in API level 15. The ActivityManager.restartPackage(String) API is no longer supported.',
      SCHEDULE_EXACT_ALARM: 'Allows applications to use exact alarm APIs.',
      SEND_RESPOND_VIA_MESSAGE: 'Allows an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls.',
      SEND_SMS: 'Allows an application to send SMS messages.',
      SET_ALARM: 'Allows an application to broadcast an Intent to set an alarm for the user.',
      SET_ALWAYS_FINISH: 'Allows an application to control whether activities are immediately finished when put in the background.',
      SET_ANIMATION_SCALE: 'Modify the global animation scaling factor.',
      SET_DEBUG_APP: 'Configure an application for debugging.',
      SET_PREFERRED_APPLICATIONS: 'This constant was deprecated in API level 15. No longer useful, see PackageManager.addPackageToPreferred(String) for details.',
      SET_PROCESS_LIMIT: 'Allows an application to set the maximum number of (not needed) application processes that can be running.',
      SET_TIME: 'Allows applications to set the system time directly.',
      SET_TIME_ZONE: 'Allows applications to set the system time zone directly.',
      SET_WALLPAPER: 'Allows applications to set the wallpaper.',
      SET_WALLPAPER_HINTS: 'Allows applications to set the wallpaper hints.',
      SIGNAL_PERSISTENT_PROCESSES: 'Allow an application to request that a signal be sent to all persistent processes.',
      SMS_FINANCIAL_TRANSACTIONS: 'This constant was deprecated in API level 31. The API that used this permission is no longer functional.',
      START_FOREGROUND_SERVICES_FROM_BACKGROUND: 'Allows an application to start foreground services from the background at any time.',
      START_VIEW_APP_FEATURES: 'Allows the holder to start the screen with a list of app features.',
      START_VIEW_PERMISSION_USAGE: 'Allows the holder to start the permission usage screen for an app.',
      STATUS_BAR: 'Allows an application to open, close, or disable the status bar and its icons.',
      SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE: 'Allows an application to subscribe to keyguard locked (i.e., showing) state.',
      SYSTEM_ALERT_WINDOW: 'Allows an app to create windows using the type WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY, shown on top of all other apps.',
      TRANSMIT_IR: 'Allows using the device\'s IR transmitter, if available.',
      UNINSTALL_SHORTCUT: 'Don\'t use this permission in your app.',
      UPDATE_DEVICE_STATS: 'Allows an application to update device statistics.',
      UPDATE_PACKAGES_WITHOUT_USER_ACTION: 'Allows an application to indicate via PackageInstaller.SessionParams.setRequireUserAction(int) that user action should not be required for an app update.',
      USE_BIOMETRIC: 'Allows an app to use device supported biometric modalities.',
      USE_EXACT_ALARM: 'Allows apps to use exact alarms just like with SCHEDULE_EXACT_ALARM but without needing to request this permission from the user.',
      USE_FINGERPRINT: 'This constant was deprecated in API level 28. Applications should request USE_BIOMETRIC instead',
      USE_FULL_SCREEN_INTENT: 'Required for apps targeting Build.VERSION_CODES.Q that want to use notification full screen intents.',
      USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER: 'Allows to read device identifiers and use ICC based authentication like EAP-AKA.',
      USE_SIP: 'Allows an application to use SIP service.',
      UWB_RANGING: 'Required to be able to range to devices using ultra-wideband.',
      VIBRATE: 'Allows access to the vibrator.',
      WAKE_LOCK: 'Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming.',
      WRITE_APN_SETTINGS: 'Allows applications to write the apn settings and read sensitive fields of an existing apn settings like user and password.',
      WRITE_CALENDAR: 'Allows an application to write the user\'s calendar data.',
      WRITE_CALL_LOG: 'Allows an application to write (but not read) the user\'s call log data.',
      WRITE_CONTACTS: 'Allows an application to write the user\'s contacts data.',
      WRITE_EXTERNAL_STORAGE: 'Allows an application to write to external storage.',
      WRITE_GSERVICES: 'Allows an application to modify the Google service map.',
      WRITE_SECURE_SETTINGS: 'Allows an application to read or write the secure system settings.',
      WRITE_SETTINGS: 'Allows an application to read or write the system settings.',
      WRITE_SYNC_SETTINGS: 'Allows applications to write the sync settings.',
      WRITE_VOICEMAIL: 'Allows an application to modify and remove existing voicemails in the system.'
    }
  }
}
